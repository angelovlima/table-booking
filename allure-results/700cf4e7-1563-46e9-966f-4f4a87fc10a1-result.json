{"uuid":"700cf4e7-1563-46e9-966f-4f4a87fc10a1","historyId":"6ea22c32e5189118704198d156e412ed","testCaseId":"[engine:junit-jupiter]/[class:com.fiap.api.table_booking.api.RestaurantControllerIT]/[nested-class:Delete]/[method:testDeleteRestaurantSuccess()]","testCaseName":"testDeleteRestaurantSuccess","fullName":"com.fiap.api.table_booking.api.RestaurantControllerIT$Delete.testDeleteRestaurantSuccess","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.fiap.api.table_booking.api.RestaurantControllerIT]/[nested-class:Delete]/[method:testDeleteRestaurantSuccess()]"},{"name":"host","value":"DESKTOP-8B0KJTE"},{"name":"thread","value":"44672@DESKTOP-8B0KJTE.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.fiap.api.table_booking.api.RestaurantControllerIT$Delete"},{"name":"testClass","value":"com.fiap.api.table_booking.api.RestaurantControllerIT$Delete"},{"name":"testMethod","value":"testDeleteRestaurantSuccess"},{"name":"suite","value":"com.fiap.api.table_booking.api.RestaurantControllerIT.Delete"}],"links":[],"name":"testDeleteRestaurantSuccess","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Failed to execute SQL script statement #1 of class path resource [insert_restaurant.sql]: INSERT INTO restaurants (id, period, name, address, cuisine, capacity) VALUES (1, 'Almoço', 'Restaurante X', 'Rua Y', 'Italiana', 50)","trace":"org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [insert_restaurant.sql]: INSERT INTO restaurants (id, period, name, address, cuisine, capacity) VALUES (1, 'Almoço', 'Restaurante X', 'Rua Y', 'Italiana', 50)\r\n\tat org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)\r\n\tat org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)\r\n\tat org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)\r\n\tat org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$9(SqlScriptsTestExecutionListener.java:361)\r\n\tat org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)\r\n\tat org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\r\n\tat org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:361)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:274)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:274)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:218)\r\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:164)\r\n\tat org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:320)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:240)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\nCaused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Unique index or primary key violation: \"PRIMARY KEY ON PUBLIC.RESTAURANTS(ID) ( /* key:1 */ CAST(1 AS BIGINT), 'Rua Y', 50, 'Italiana', 'Restaurante X', U&'Almo\\\\00e7o')\"; SQL statement:\nINSERT INTO restaurants (id, period, name, address, cuisine, capacity) VALUES (1, 'Almoço', 'Restaurante X', 'Rua Y', 'Italiana', 50) [23505-224]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:520)\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:489)\r\n\tat org.h2.message.DbException.get(DbException.java:223)\r\n\tat org.h2.message.DbException.get(DbException.java:199)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:174)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:135)\r\n\tat org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:169)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:256)\r\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)\r\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)\r\n\tat com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)\r\n\tat com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)\r\n\tat org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)\r\n\t... 18 more\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1727821316964,"stop":1727821316982}